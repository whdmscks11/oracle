SELECT * FROM MEMBER;

-- 문자열 추출 함수 SUBSTR()
SELECT SUBSTR(NAME, 2) FROM MEMBER;

SELECT SUBSTRB(NAME, 1) FROM MEMBER;
SELECT SUBSTRB(NAME, 2) FROM MEMBER;
SELECT SUBSTRB(NAME, 4) FROM MEMBER;

SELECT LENGTHB(NAME) FROM MEMBER;

UPDATE MEMBER SET BIRTHDAY = '2002-01-29' WHERE ID = 'dokdo';
UPDATE MEMBER SET BIRTHDAY = '1992-07-12' WHERE ID = 'daemado';
UPDATE MEMBER SET BIRTHDAY = '2001-11-29' WHERE ID = 'whdmscks11';
UPDATE MEMBER SET BIRTHDAY = '1995-11-11' WHERE ID = 'joseph88';
UPDATE MEMBER SET BIRTHDAY = '2004-08-21' WHERE ID = 'whdns';
COMMIT;

-- 회원의 이름, 출생월 조회
SELECT NAME, SUBSTR(BIRTHDAY, 6, 2) BIRTHMONTH FROM MEMBER;

UPDATE MEMBER SET PHONE = '011-314-0072' WHERE ID = 'dokdo';
UPDATE MEMBER SET PHONE = '011-688-1092' WHERE ID = 'daemado';
UPDATE MEMBER SET PHONE = '010-3948-0122' WHERE ID = 'whdmscks11';
UPDATE MEMBER SET PHONE = '010-3472-9511' WHERE ID = 'joseph88';
UPDATE MEMBER SET PHONE = '010-4472-9102' WHERE ID = 'whdns';
COMMIT;
ROLLBACK;

-- 회원 중에서 전화번호가 010으로 시작하는 회원의 모든 정보 출력
SELECT * FROM MEMBER WHERE REGEXP_LIKE(PHONE, '010-\d{4}-\d{4}');
SELECT * FROM MEMBER WHERE PHONE LIKE '010%';
SELECT * FROM MEMBER WHERE SUBSTR(PHONE, 1, 3) = '010';

-- 회원 중에서 생년 월이 7,8,9월인 회원의 모든 정보를 출력
SELECT * FROM MEMBER WHERE REGEXP_LIKE(BIRTHDAY, '\d{4}-0[7-9]-\d{2}');

SELECT * FROM MEMBER WHERE SUBSTR(BIRTHDAY, 7, 1) BETWEEN '7' AND '9';
SELECT * FROM MEMBER WHERE SUBSTR(BIRTHDAY, 7, 1) BETWEEN 7 AND 9;

SELECT * FROM MEMBER WHERE SUBSTR(BIRTHDAY, 6, 2) IN('07','08','09');
SELECT * FROM MEMBER WHERE SUBSTR(BIRTHDAY, 6, 2) IN(07,08,09);

-- 문자 소대문자 변환
SELECT LOWER('NeWLec') FROM DUAL;
SELECT UPPER('Newlec') FROM DUAL;

-- 문자열 대치 함수
SELECT REPLACE('WHERE WE ARE', 'WE', 'YOU') FROM DUAL;
SELECT TRANSLATE('WHERE WE ARE', 'WE', 'YOU') FROM DUAL;

-- 회원들의 전화번호의 형식을 변환하여 조회
SELECT NAME, REPLACE(PHONE, '-',' ') PHONE FROM MEMBER;

-- 회원의 이름을 조회하시오(단, 이름의 길이가 3자가 안되는 경우 이름 오른쪽을 밑줄('_')로 채우시오
SELECT NAME FROM MEMBER;
SELECT RPAD(NAME, 6, '_') FROM MEMBER; 

SELECT INITCAP('the important thing is peace') FROM DUAL;
SELECT INITCAP('the impor헬로tant thi하이ng') FROM DUAL;

SELECT INSTR('ALL WE NEED TO DO IS JUST TO...','TO') FROM DUAL; 
SELECT INSTR('ALL WE NEED TO DO IS JUST TO...','TO', 15) FROM DUAL;
SELECT INSTR('ALL WE NEED TO DO IS JUST TO...','TO',1,2) FROM DUAL;

-- 회원의 전화번호에서 처 번째 대시(-) 문자와 두 번째 대시(-0 문자 사이의 간격은?
SELECT PHONE FROM MEMBER;
SELECT INSTR(PHONE, '-',1,2) - INSTR(PHONE, '-') - 1 FROM MEMBER;

-- 회원의 전화번호의 가운데 번호만 조회
SELECT SUBSTR(PHONE, 5, INSTR(PHONE, '-',1,2) - INSTR(PHONE, '-') - 1 ) FROM MEMBER;

-- 회원의 전화번호 컬럼에 포함된 문자 '-'를 없앤 전화번호의 길이 조회
SELECT LENGTH(REPLACE(PHONE, '-', '')) FROM MEMBER; 
-- 위 결과 집합에서 첫번째와 두번째 데이터가 11바이트의 길이를 가지는 이유는 
-- PHONE의 데이터 타입이 CHAR(13)이기 때문이다. 
-- CHAR 데이터 타입의 특성 상, 정확한 데이터 값의 길이에 관계없이 지정된 길이만큼의 공간을 사용한다.
-- 따라서 모든 PHONE의 데이터는 13바이트의 길이를 가진다. 
-- 거기에서 REPLACE 함수로 '-' 를 '' 으로 바꾸어 주었으니 13 - 2 가 되어 11 바이트가 출력되는 것
-- SELECT로 꺼내어 본 문자의 길이가 11바이트라는 것이지 PHONE 컬럼의 데이터는 여전히 13바이트이다.
